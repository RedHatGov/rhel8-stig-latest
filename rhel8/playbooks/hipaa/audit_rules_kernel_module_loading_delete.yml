# platform = multi_platform_rhel,multi_platform_rhv
# reboot = false
# complexity = low
# disruption = low
# strategy = configure
- name: Ensure auditd Collects Information on Kernel Module Unloading - delete_module
  hosts: '@@HOSTS@@'
  become: true
  tags:
    - CCE-80711-5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.7
    - audit_rules_kernel_module_loading_delete
    - configure_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  tasks:

    - name: Set architecture for audit delete_module tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*delete_module.*$
        patterns: '*.rules'
      register: find_delete_module
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_delete_module.matched is defined and find_delete_module.matched ==
          0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_delete_module.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_delete_module.matched is defined and find_delete_module.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"

    - name: Inserts/replaces the delete_module rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S delete_module -k module-change
        state: present
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Inserts/replaces the delete_module rule in rules.d on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S delete_module -k module-change
        state: present
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"

    - name: Inserts/replaces the delete_module rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F arch=b32 -S delete_module -k module-change
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Inserts/replaces the delete_module rule in audit.rules when on x86_64
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F arch=b64 -S delete_module -k module-change
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"
