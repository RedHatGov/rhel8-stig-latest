# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# reboot = true
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure auditd Collects File Deletion Events by User - renameat
  hosts: '@@HOSTS@@'
  become: true
  tags:
    - CCE-80704-0
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
    - PCI-DSS-Req-10.2.7
    - audit_rules_file_deletion_events_renameat
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:

    - name: Set architecture for audit renameat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: '*.rules'
      register: find_renameat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_renameat.matched is defined and find_renameat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_renameat.matched is defined and find_renameat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"

    - name: Inserts/replaces the renameat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset
          -F key=delete
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Inserts/replaces the renameat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset
          -F key=delete
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"

    - name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset
          -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Inserts/replaces the renameat rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset
          -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"
