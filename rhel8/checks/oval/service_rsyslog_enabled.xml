<def-group>

  <definition class="compliance" id="service_rsyslog_enabled" version="1">
    <metadata>
      <title>Service rsyslog Enabled</title>
      <affected family="unix">
        <platform>multi_platform_all</platform>
      </affected>
      <description>The rsyslog service should be enabled if possible.</description>
    </metadata>
    <criteria comment="package rsyslog installed and service rsyslog is configured to start" operator="AND">
    <criterion comment="rsyslog installed" test_ref="test_service_rsyslog_package_rsyslog_installed" />
      <criteria comment="service rsyslog is configured to start and is running" operator="AND">
        <criterion comment="rsyslog is running" test_ref="test_service_running_rsyslog" />
        <criteria operator="OR" comment="service rsyslog is configured to start">
          <criterion comment="multi-user.target wants rsyslog" test_ref="test_multi_user_wants_rsyslog" />
          <criterion comment="multi-user.target wants rsyslog socket" test_ref="test_multi_user_wants_rsyslog_socket" />
        </criteria>
      </criteria>
    </criteria>
  </definition>

  <linux:systemdunitdependency_test check="all" check_existence="any_exist" comment="systemd test" id="test_multi_user_wants_rsyslog" version="1">
    <linux:object object_ref="object_multi_user_target_for_rsyslog_enabled" />
    <linux:state state_ref="state_systemd_rsyslog_on"/>
  </linux:systemdunitdependency_test>
  <linux:systemdunitdependency_object id="object_multi_user_target_for_rsyslog_enabled" comment="list of dependencies of multi-user.target" version="1">
    <linux:unit>multi-user.target</linux:unit>
  </linux:systemdunitdependency_object>
  <linux:systemdunitdependency_state id="state_systemd_rsyslog_on" comment="rsyslog listed at least once in the dependencies" version="1">
    <linux:dependency entity_check="at least one">rsyslog.service</linux:dependency>
  </linux:systemdunitdependency_state>

  <linux:systemdunitdependency_test check="all" check_existence="any_exist" comment="systemd test" id="test_multi_user_wants_rsyslog_socket" version="1">
    <linux:object object_ref="object_multi_user_target_for_rsyslog_socket_enabled" />
    <linux:state state_ref="state_systemd_rsyslog_socket_on"/>
  </linux:systemdunitdependency_test>
  <linux:systemdunitdependency_object id="object_multi_user_target_for_rsyslog_socket_enabled" comment="list of dependencies of multi-user.target" version="1">
    <linux:unit>multi-user.target</linux:unit>
  </linux:systemdunitdependency_object>
  <linux:systemdunitdependency_state id="state_systemd_rsyslog_socket_on" comment="rsyslog listed at least once in the dependencies" version="1">
    <linux:dependency entity_check="at least one">rsyslog.socket</linux:dependency>
  </linux:systemdunitdependency_state>

  <linux:systemdunitproperty_test id="test_service_running_rsyslog" check="at least one" check_existence="at_least_one_exists" comment="Test that the rsyslog service is running" version="1">
    <linux:object object_ref="obj_service_running_rsyslog"/>
    <linux:state state_ref="state_service_running_rsyslog"/>
  </linux:systemdunitproperty_test>
  <linux:systemdunitproperty_object id="obj_service_running_rsyslog" comment="Retrieve the ActiveState property of rsyslog" version="1">
    <linux:unit operation="pattern match">^rsyslog\.(socket|service)$</linux:unit>
    <linux:property>ActiveState</linux:property>
  </linux:systemdunitproperty_object>
  <linux:systemdunitproperty_state id="state_service_running_rsyslog" version="1" comment="rsyslog is running">
      <linux:value>active</linux:value>
  </linux:systemdunitproperty_state>



  <linux:rpminfo_test check="all" check_existence="all_exist"
  id="test_service_rsyslog_package_rsyslog_installed" version="1"
  comment="package rsyslog is installed">
    <linux:object object_ref="obj_test_service_rsyslog_package_rsyslog_installed" />
    
  </linux:rpminfo_test>
  <linux:rpminfo_object id="obj_test_service_rsyslog_package_rsyslog_installed" version="1">
    <linux:name>rsyslog</linux:name>
  </linux:rpminfo_object>
  

</def-group>