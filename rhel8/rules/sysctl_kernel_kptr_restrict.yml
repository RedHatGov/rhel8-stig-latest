description: 'To set the runtime status of the <code>kernel.kptr_restrict</code> kernel
  parameter, run the following command: <pre>$ sudo sysctl -w kernel.kptr_restrict=1</pre>

  If this is not the system default value, add the following line to a file in the
  directory <tt>/etc/sysctl.d</tt>: <pre>kernel.kptr_restrict = 1</pre>'
identifiers: {cce: 80915-2}
ocil: 'The status of the <code>kernel.kptr_restrict</code> kernel parameter can be
  queried

  by running the following command:

  <pre>$ sysctl kernel.kptr_restrict</pre>

  The output of the command should indicate a value of <code>1</code>.

  If this value is not the default value, investigate how it could have been

  adjusted at runtime, and verify it is not set improperly. This has to be checked

  in all files in the <tt>/etc/sysctl.d</tt> directory and the deprecated

  <code>/etc/sysctl.conf</code>. You can verify this by running the following command:

  <pre>$ grep -r kernel.kptr_restrict /etc/sysctl.conf /etc/sysctl.d</pre>

  '
ocil_clause: the correct value is not returned
oval_external_content: null
platform: machine
prodtype: all
rationale: 'Exposing kernel pointers (through procfs or <tt>seq_printf()</tt>) exposes

  kernel writeable structures that can contain functions pointers. If a write vulnereability
  occurs

  in the kernel allowing a write access to any of this structure, the kernel can be
  compromise. This

  option disallow any program withtout the CAP_SYSLOG capability from getting the
  kernel pointers addresses,

  replacing them with 0.'
references: {anssi: NT28(R23), nist: SC-39, srg: SRG-OS-000132-GPOS-00067}
severity: medium
template:
  backends: {}
  name: sysctl
  vars: {datatype: int, sysctlval: '1', sysctlvar: kernel.kptr_restrict}
title: Restrict Exposed Kernel Pointer Addresses Access
warnings: []
