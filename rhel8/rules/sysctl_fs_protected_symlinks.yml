description: 'To set the runtime status of the <code>fs.protected_symlinks</code>
  kernel parameter, run the following command: <pre>$ sudo sysctl -w fs.protected_symlinks=1</pre>

  If this is not the system default value, add the following line to a file in the
  directory <tt>/etc/sysctl.d</tt>: <pre>fs.protected_symlinks = 1</pre>'
identifiers: {cce: 81030-9}
ocil: 'The status of the <code>fs.protected_symlinks</code> kernel parameter can be
  queried

  by running the following command:

  <pre>$ sysctl fs.protected_symlinks</pre>

  The output of the command should indicate a value of <code>1</code>.

  If this value is not the default value, investigate how it could have been

  adjusted at runtime, and verify it is not set improperly. This has to be checked

  in all files in the <tt>/etc/sysctl.d</tt> directory and the deprecated

  <code>/etc/sysctl.conf</code>. You can verify this by running the following command:

  <pre>$ grep -r fs.protected_symlinks /etc/sysctl.conf /etc/sysctl.d</pre>

  '
ocil_clause: the correct value is not returned
oval_external_content: null
platform: null
prodtype: all
rationale: 'By enabling this kernel parameter, symbolic links are permitted to be
  followed

  only when outside a sticky world-writable directory, or when the UID of the

  link and follower match, or when the directory owner matches the symlink''s owner.

  Disallowing such symlinks helps mitigate vulnerabilities based on insecure file
  system

  accessed by privileged programs, avoiding an exploitation vector exploiting unsafe
  use of

  <tt>open()</tt> or <tt>creat()</tt>.'
references: {anssi: NT28(R23), cis: 1.6.1, nist: SI-11, srg: SRG-OS-000324-GPOS-00125}
severity: unknown
template:
  backends: {}
  name: sysctl
  vars: {datatype: int, sysctlval: '1', sysctlvar: fs.protected_symlinks}
title: Enable Kernel Parameter to Enforce DAC on Symlinks
warnings: []
