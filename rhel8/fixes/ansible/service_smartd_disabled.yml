# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Disable service smartd
  block:

    - name: Gather the service facts
      service_facts: null

    - name: Disable service smartd
      systemd:
        name: smartd.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when: '"smartd.service" in ansible_facts.services'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_smartd_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7

- name: Unit Socket Exists - smartd.socket
  command: systemctl list-unit-files smartd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_smartd_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7

- name: Disable socket smartd
  systemd:
    name: smartd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"smartd.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_smartd_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
